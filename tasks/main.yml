---
# tasks file for create-network-documentation
- name: Ensure the output directory exists
  file:
    path: "{{ output_path }}/{{ item }}"
    state: directory
  with_items:
    - templates
    - docs

- name: "{{ api_call }} | Make API call by run.sh script"
  ansible.builtin.script: ubnt_api_call.sh {{ api_call }}
  register: api_call_output

- name: "{{ api_call }} | Set facts for template generation"
  set_fact:
    response_keys: []
    response_data: "{{ api_call_output.stdout | from_json }}"
  when: api_call_output.stdout is defined

- name: "{{ api_call }} | Prepare keys for 🐡 items"
  set_fact:
    response_keys: "{{ response_keys + [ item.key ] }}"
  with_dict: "{{ response_data }}"
  when:
    - response_data is defined
    - item.key.split('-') | length == 1

- name: "{{ api_call }} | Ensure we remove all the doubles 👨‍👩‍👧‍👦"
  set_fact:
    response_keys: "{{ response_keys | list | unique }}"
  when: response_data is defined

- name: "{{ api_call }} | Processing bullseye calls 🎯☎️"
  include_tasks: "{{ api_call }}.yml"
  when: response_data is defined

- name: "{{ api_call }} | Generate basic jinja template with {{ api_call }}"
  ansible.builtin.template:
    src: "basic_call.j2"
    dest: "{{ output_path }}/templates/{{ api_call }}.j2"
  when: 
    - response_keys is defined
    - has_template is false

- name: Generate {{ api_call }} jinja template
  ansible.builtin.template:
    src: "{{ api_call }}.j2"
    dest: "{{ output_path }}/templates/{{ api_call }}.j2"
    mode: '0644'
  when: 
    - response_keys is defined
    - has_template is true

- name: Generate document {{ api_call }}.md
  ansible.builtin.template:
    src: "{{ output_path }}/templates/{{ api_call }}.j2"
    dest: "{{ output_path }}/docs/{{ file_prefix }}_{{ api_call }}.md"
    mode: '0644'
  when: 
    - response_data is defined
